definitions:
  project.Request:
    properties:
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      manager_id:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  project.Response:
    properties:
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      manager_id:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  response.Object:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  task.Request:
    properties:
      assignee_id:
        type: string
      completed_at:
        type: string
      description:
        type: string
      id:
        type: string
      priority:
        type: string
      project_id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  task.Response:
    properties:
      assignee_id:
        type: string
      completed_at:
        type: string
      description:
        type: string
      id:
        type: string
      priority:
        type: string
      project_id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  user.Request:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
  user.Response:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /projects:
    get:
      consumes:
      - application/json
      description: Get a list of all projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: Project Request
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/project.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Add a new project
      tags:
      - projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a project by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted Project ID
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Delete a project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get details of a specific project by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Get project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update an existing project by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project Request
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/project.Request'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Update a project
      tags:
      - projects
  /projects/{id}/tasks:
    get:
      consumes:
      - application/json
      description: Get a list of all tasks for a specific project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List tasks by project
      tags:
      - projects
  /projects/search:
    get:
      consumes:
      - application/json
      description: Search projects by title or manager_id
      parameters:
      - description: Project Title
        in: query
        name: title
        type: string
      - description: Manager ID
        in: query
        name: manager_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Search projects
      tags:
      - projects
  /tasks:
    get:
      consumes:
      - application/json
      description: Get a list of all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: Task Request
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/task.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/task.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Add a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted Task ID
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get details of a specific task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Get task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update an existing task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task Request
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/task.Request'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Update a task
      tags:
      - tasks
  /tasks/search:
    get:
      consumes:
      - application/json
      description: Search tasks by title, priority, status, assignee_id, or project_id
      parameters:
      - description: Task Title
        in: query
        name: title
        type: string
      - description: Task Priority
        in: query
        name: priority
        type: string
      - description: Task Status
        in: query
        name: status
        type: string
      - description: Assignee ID
        in: query
        name: assignee_id
        type: string
      - description: Project ID
        in: query
        name: project_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Search tasks
      tags:
      - tasks
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Add a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted User ID
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get details of a specific user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Update a user
      tags:
      - users
  /users/{id}/tasks:
    get:
      consumes:
      - application/json
      description: Get a list of tasks for a specific user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List tasks by user
      tags:
      - users
  /users/search:
    get:
      consumes:
      - application/json
      description: Search users by name or email
      parameters:
      - description: User Name
        in: query
        name: name
        type: string
      - description: User Email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Search users
      tags:
      - users
swagger: "2.0"
